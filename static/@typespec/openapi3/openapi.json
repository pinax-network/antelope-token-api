{
  "openapi": "3.0.0",
  "info": {
    "title": "Antelope Token Api",
    "summary": "Tokens information from the Antelope blockchains, powered by Substreams",
    "license": {
      "name": "MIT",
      "url": "https://github.com/pinax-network/antelope-token-api/blob/4f4bf36341b794c0ccf5b7a14fdf810be06462d2/LICENSE"
    },
    "version": "6.1.0"
  },
  "tags": [
    {
      "name": "Usage"
    },
    {
      "name": "Docs"
    },
    {
      "name": "Monitoring"
    }
  ],
  "paths": {
    "/account/balances": {
      "get": {
        "operationId": "Usage_balance",
        "summary": "Token balances",
        "description": "Token balances of an account.",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "contract",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "symcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 10
            },
            "explode": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 1
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Array of balances.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Balance"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/account/balances/historical": {
      "get": {
        "operationId": "Usage_balanceHistorical",
        "summary": "Historical token balances",
        "description": "Historical token balances of an account.",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "block_num",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "explode": false
          },
          {
            "name": "contract",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "symcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 10
            },
            "explode": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 1
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Array of balances.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BalanceChange"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/account/transfers": {
      "get": {
        "operationId": "Usage_transfersAccount",
        "summary": "Token transfers from and to an account",
        "description": "All transfers related to an account.",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "block_range",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BlockRange"
            },
            "explode": false
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "contract",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "symcode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 10
            },
            "explode": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 1
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Array of transfers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transfer"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/head": {
      "get": {
        "operationId": "Usage_head",
        "summary": "Head block information",
        "description": "Current head block for which data is available (can be lower than head block of the chain).",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 10
            },
            "explode": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 1
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Head block information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_num": {
                            "type": "integer",
                            "format": "uint64"
                          },
                          "block_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "block_num",
                          "block_id"
                        ]
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Usage"
        ]
      }
    },
    "/health": {
      "get": {
        "operationId": "Monitoring_health",
        "summary": "Health check",
        "description": "Checks database connection.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK or ApiError.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Monitoring"
        ]
      }
    },
    "/metrics": {
      "get": {
        "operationId": "Monitoring_metrics",
        "summary": "Prometheus metrics",
        "description": "Prometheus metrics.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Metrics as text.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Monitoring"
        ]
      }
    },
    "/openapi": {
      "get": {
        "operationId": "Docs_openapi",
        "summary": "OpenAPI JSON spec",
        "description": "Reflection endpoint to return OpenAPI JSON spec. Also used by Swagger to generate the frontpage.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The OpenAPI JSON spec"
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Docs"
        ]
      }
    },
    "/tokens": {
      "get": {
        "operationId": "Usage_tokens",
        "summary": "Tokens",
        "description": "List of available tokens.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 10
            },
            "explode": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 1
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Array of token identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Models.Scope"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/tokens/holders": {
      "get": {
        "operationId": "Usage_holders",
        "summary": "Token holders",
        "description": "List of holders of a token.",
        "parameters": [
          {
            "name": "contract",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "symcode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 10
            },
            "explode": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 1
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Array of accounts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Holder"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/tokens/supplies": {
      "get": {
        "operationId": "Usage_supply",
        "summary": "Token supply",
        "description": "Total supply for a token.",
        "parameters": [
          {
            "name": "block_num",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "explode": false
          },
          {
            "name": "issuer",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "contract",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "symcode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 10
            },
            "explode": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 1
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Array of supplies.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Supply"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/transfers": {
      "get": {
        "operationId": "Usage_transfers",
        "summary": "Token transfers",
        "description": "All transfers related to a token.",
        "parameters": [
          {
            "name": "block_range",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BlockRange"
            },
            "explode": false
          },
          {
            "name": "contract",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "symcode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 10
            },
            "explode": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 1
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Array of transfers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transfer"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/transfers/id": {
      "get": {
        "operationId": "Usage_transferId",
        "summary": "Token transfer",
        "description": "Specific transfer related to a token.",
        "parameters": [
          {
            "name": "trx_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 10
            },
            "explode": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": 1
            },
            "explode": false
          }
        ],
        "responses": {
          "200": {
            "description": "Array of transfers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data",
                    "meta"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transfer"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Usage"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/version": {
      "get": {
        "operationId": "Docs_version",
        "summary": "Api version",
        "description": "Api version and Git short commit hash.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Api version and commit hash.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        },
        "tags": [
          "Docs"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "required": [
          "status",
          "code",
          "message"
        ],
        "properties": {
          "status": {
            "type": "number",
            "enum": [
              500,
              504,
              400,
              401,
              403,
              404,
              405
            ]
          },
          "code": {
            "type": "string",
            "enum": [
              "bad_database_response",
              "bad_header",
              "missing_required_header",
              "bad_query_input",
              "database_timeout",
              "forbidden",
              "internal_server_error",
              "method_not_allowed",
              "route_not_found",
              "unauthorized",
              "not_found_data"
            ]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Balance": {
        "type": "object",
        "required": [
          "last_updated_block",
          "contract",
          "symcode",
          "balance"
        ],
        "properties": {
          "last_updated_block": {
            "type": "integer",
            "format": "uint64"
          },
          "contract": {
            "type": "string"
          },
          "symcode": {
            "type": "string"
          },
          "balance": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "BalanceChange": {
        "type": "object",
        "required": [
          "trx_id",
          "action_index",
          "contract",
          "symcode",
          "precision",
          "amount",
          "value",
          "block_num",
          "timestamp",
          "account",
          "balance",
          "balance_delta"
        ],
        "properties": {
          "trx_id": {
            "type": "string"
          },
          "action_index": {
            "type": "integer",
            "format": "uint32"
          },
          "contract": {
            "type": "string"
          },
          "symcode": {
            "type": "string"
          },
          "precision": {
            "type": "integer",
            "format": "uint32"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "block_num": {
            "type": "integer",
            "format": "uint64"
          },
          "timestamp": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          },
          "balance_delta": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BlockRange": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "uint64"
        },
        "maxItems": 2
      },
      "Holder": {
        "type": "object",
        "required": [
          "account",
          "balance"
        ],
        "properties": {
          "account": {
            "type": "string"
          },
          "balance": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Models.Scope": {
        "type": "object",
        "required": [
          "contract",
          "symcode"
        ],
        "properties": {
          "contract": {
            "type": "string"
          },
          "symcode": {
            "type": "string"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "required": [
          "next_page",
          "previous_page",
          "total_pages",
          "total_results"
        ],
        "properties": {
          "next_page": {
            "type": "integer",
            "format": "int64"
          },
          "previous_page": {
            "type": "integer",
            "format": "int64"
          },
          "total_pages": {
            "type": "integer",
            "format": "int64"
          },
          "total_results": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "QueryStatistics": {
        "type": "object",
        "required": [
          "elapsed",
          "rows_read",
          "bytes_read"
        ],
        "properties": {
          "elapsed": {
            "type": "number"
          },
          "rows_read": {
            "type": "integer",
            "format": "int64"
          },
          "bytes_read": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseMetadata": {
        "type": "object",
        "required": [
          "statistics",
          "next_page",
          "previous_page",
          "total_pages",
          "total_results"
        ],
        "properties": {
          "statistics": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryStatistics"
              }
            ],
            "nullable": true
          },
          "next_page": {
            "type": "integer",
            "format": "int64"
          },
          "previous_page": {
            "type": "integer",
            "format": "int64"
          },
          "total_pages": {
            "type": "integer",
            "format": "int64"
          },
          "total_results": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Supply": {
        "type": "object",
        "required": [
          "trx_id",
          "action_index",
          "contract",
          "symcode",
          "precision",
          "amount",
          "value",
          "block_num",
          "timestamp",
          "issuer",
          "max_supply",
          "supply",
          "supply_delta"
        ],
        "properties": {
          "trx_id": {
            "type": "string"
          },
          "action_index": {
            "type": "integer",
            "format": "uint32"
          },
          "contract": {
            "type": "string"
          },
          "symcode": {
            "type": "string"
          },
          "precision": {
            "type": "integer",
            "format": "uint32"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "block_num": {
            "type": "integer",
            "format": "uint64"
          },
          "timestamp": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          },
          "max_supply": {
            "type": "string"
          },
          "supply": {
            "type": "string"
          },
          "supply_delta": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Transfer": {
        "type": "object",
        "required": [
          "trx_id",
          "action_index",
          "contract",
          "symcode",
          "precision",
          "amount",
          "value",
          "block_num",
          "timestamp",
          "from",
          "to",
          "quantity",
          "memo"
        ],
        "properties": {
          "trx_id": {
            "type": "string"
          },
          "action_index": {
            "type": "integer",
            "format": "uint32"
          },
          "contract": {
            "type": "string"
          },
          "symcode": {
            "type": "string"
          },
          "precision": {
            "type": "integer",
            "format": "uint32"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "block_num": {
            "type": "integer",
            "format": "uint64"
          },
          "timestamp": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          }
        }
      },
      "Version": {
        "type": "object",
        "required": [
          "version",
          "commit"
        ],
        "properties": {
          "version": {
            "type": "string",
            "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$"
          },
          "commit": {
            "type": "string",
            "pattern": "^[0-9a-f]{7}$"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Api-Key"
      }
    }
  }
}
